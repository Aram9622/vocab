<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use App\Http\Controllers\Traits\FileUploadTrait;

class Category extends Model
{
    use \App\Http\Controllers\Traits\Image;

    protected $table = 'categories';

    public function parent()
    {
        return $this->belongsTo(self::class, 'parent_id', 'id');
    }

    public function parentOne()
    {
        return $this->hasOne(self::class, 'parent_id', 'id');
    }

    public function conversations()
    {
        return $this->hasMany(Conversation::class);
    }

    public function words()
    {
        return $this->hasMany(Conversation::class);
    }

    public function news()
    {
        return $this->hasMany(Conversation::class);
    }

    public function phrases()
    {
        return $this->hasMany(Phrase::class);
    }

    public function verbs()
    {
        return $this->hasMany(Phrase::class);
    }

    public function exercises()
    {
        return $this->hasMany(Exercise::class);
    }

    protected static function boot()
    {
        static::deleting(function ($model) {
            $model->deleteAllRelatedCatImages();
        });

        parent::boot(); // TODO: Change the autogenerated stub
    }

    public static function createItem($type, $level = null, $parent_id, $request)
    {
        $category = new self;
        $category->type = $type;
        $category->level = $level;
        $category->name = $request['name'];
        if ($request->hasFile('image')) {
            if ($level == null) {
                $image_path = 'categories/' . $type;
            } else {
                $image_path = 'categories/' . $type . '/' . $level;
            }
            $request = FileUploadTrait::saveFiles($request, $image_path);
            $category->image = $request->image;
        }
        $category->parent_id = ($parent_id == 0) ? null : $parent_id;
        return $category->save();
    }
}
